{"version":3,"sources":["webpack:///src/app/RegistrationModule/geolocation/geolocation-routing.module.ts","webpack:///src/app/RegistrationModule/geolocation/geolocation.module.ts","webpack:///src/app/RegistrationModule/geolocation/geolocation.page.ts","webpack:///src/app/RegistrationModule/geolocation/geolocation.page.scss","webpack:///src/app/RegistrationModule/geolocation/geolocation.page.html"],"names":["routes","path","component","GeolocationPage","GeolocationPageRoutingModule","NgModule","imports","RouterModule","exports","GeolocationPageModule","CommonModule","FormsModule","IonicModule","declarations","zone","geolocation","route","platform","nativeGeocoder","apiService","sendData","diagnostic","alertController","profileAddCustomer","alldata","requestID","requestFor","requestIDPage","requestPage","ready","then","console","log","width","height","create","message","backdropDismiss","buttons","text","handler","alert","present","isLocationEnabled","enabled","presentLoadingDefault","run","loc","getCurrentPosition","curr_pos","coords","latitude","longitude","getGeoLocation","locationAlert","lat","lng","type","presentLoadingClose","navigator","google","maps","Geocoder","geocoder","LatLng","latlng","request","latLng","geocode","results","status","GeocoderStatus","OK","result","userLocation","userCity","formatted_address","latLngResult","is","options","useLocale","maxResults","reverseGeocode","userLocationFromLatLng","error","address","forwardGeocode","geometry","location","apiKey","apiCallWithLoginToken","URLS","subscribe","success","navigate","showToastMessage","err","JSON","stringify","NgZone","Geolocation","Router","Platform","NativeGeocoder","ApiService","DataTransferService","Diagnostic","AlertController","Component","selector","template"],"mappings":"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","file":"src_app_RegistrationModule_geolocation_geolocation_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GeolocationPage } from './geolocation.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GeolocationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GeolocationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GeolocationPageRoutingModule } from './geolocation-routing.module';\n\nimport { GeolocationPage } from './geolocation.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    GeolocationPageRoutingModule\n  ],\n  declarations: [GeolocationPage]\n})\nexport class GeolocationPageModule {}\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { AlertController, Platform } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { NativeGeocoder, NativeGeocoderOptions, NativeGeocoderResult } from '@ionic-native/native-geocoder/ngx';\nimport { ApiService } from 'src/app/provider/api.service';\nimport { URLS } from 'src/assets/constant';\nimport { DataTransferService } from 'src/app/services/data-transfer.service';\nimport { Diagnostic } from '@ionic-native/diagnostic/ngx';\ndeclare var google;\n\n@Component({\n  selector: 'app-geolocation',\n  templateUrl: './geolocation.page.html',\n  styleUrls: ['./geolocation.page.scss'],\n})\nexport class GeolocationPage implements OnInit {\n  userLocation;\n  userCity;\n  lat;\n  lng;\n  loc:any;\n  location;\n  latLngResult;\n  userLocationFromLatLng;\n  currentAddress:any;\n  profileAddCustomer:any;\n  requestIDPage:any;\n  requestID:any;\n  constructor( public zone: NgZone,private geolocation: Geolocation,private route: Router, public platform:Platform, \n    private nativeGeocoder: NativeGeocoder,public apiService:ApiService,private sendData:DataTransferService,\n    private diagnostic: Diagnostic,public alertController:AlertController) {\n\n      this.profileAddCustomer=this.sendData.alldata;\n      if(this.profileAddCustomer){\n      this.requestID=this.profileAddCustomer.requestFor,\n      this.requestIDPage=this.profileAddCustomer.requestPage\n      }else{\n        this.requestID='';\n        this.requestIDPage='';\n      }\n    platform.ready().then(() => {\n      console.log('Width: ' + platform.width());\n      console.log('Height: ' + platform.height());\n    });\n\n   }\n\n  ngOnInit() {\n\n  }\n\n\n  locationAlert(){\n    this.alertController.create({\n      message: 'Enable Location from device settings',\n      backdropDismiss: false,\n      buttons: [ {\n        text: 'ok',\n        handler: () => {\n          console.log('Buy clicked');\n        }\n      }]\n    }).then(alert => {\n        alert.present();\n      });\n  }\n async getLocationFun(){\n   this.diagnostic.isLocationEnabled().then((enabled) =>{\n    // this.diagnostic.requestLocationAuthorization().then((requestLocation=>{}))\n    console.log(\"Location setting is enabled\" , enabled);\n     if(enabled){\n      console.log(\"Location setting is \" + (enabled ? \"enabled\" : \"disabled\"));\n      console.log(\"The following enabled \",enabled);\n      this.apiService.presentLoadingDefault();\n      this.zone.run(async ()=>{\n      this.loc='';\n      console.log('curr_pos4');\n      let curr_pos=await this.geolocation.getCurrentPosition();\n      console.log('curr_pos', curr_pos.coords.latitude);\n      console.log('curr_pos', curr_pos.coords.longitude);\n    this.getGeoLocation(curr_pos.coords.latitude, curr_pos.coords.longitude)\n    });\n     }else{\n      console.log(\"The following error occurred: \",enabled);\n      this.locationAlert();\n      return false;\n     }\n   });\n  }\n \n  async getGeoLocation(lat: number, lng: number, type?) {\n    this.apiService.presentLoadingClose();\n    if (navigator.geolocation) {\n      console.log('lat', lat);\n      console.log('lng', lng);\n      this.lat = lat;\n      this.lng = lng;\n      let geocoder = await new google.maps.Geocoder();\n      let latlng = await new google.maps.LatLng(lat, lng);\n      let request = { latLng: latlng };\n\n      await geocoder.geocode(request, (results, status) => {\n        console.log('main Array',results,status)\n        if (status == google.maps.GeocoderStatus.OK) {\n          let result = results[0];\n          this.userLocation=results[0];\n          console.log('current Location',results[0]);\n          console.log(\"loc: \", result['formatted_address']);\n          this.loc= result['formatted_address'];\n          this.zone.run(() => {\n            if (result != null) {\n              this.userCity = result.formatted_address;\n              if (type === 'reverseGeocode') {\n                this.latLngResult = result.formatted_address;\n                \n              }\n            }\n          })\n        }\n      });\n    }\n  }\n  reverseGeocode(lat, lng) {\n    if (this.platform.is('cordova')) {\n      let options: NativeGeocoderOptions = {\n        useLocale: true,\n        maxResults: 5\n      };\n      this.nativeGeocoder.reverseGeocode(lat, lng, options)\n      .then((result: NativeGeocoderResult[]) => this.userLocationFromLatLng = result[0])\n        .catch((error: any) => console.log(error));\n    } else {\n      this.getGeoLocation(lat, lng, 'reverseGeocode');\n    }\n  }\n  forwardGeocode(address) {\n    if (this.platform.is('cordova')) {\n      let options: NativeGeocoderOptions = {\n        useLocale: true,\n        maxResults: 5\n      };\n      this.nativeGeocoder.forwardGeocode(address, options).then((result: NativeGeocoderResult[]) => {\n        this.zone.run(() => {\n          this.lat = result[0].latitude;\n          this.lng = result[0].longitude;\n        })\n      })\n      .catch((error: any) => console.log(error));\n    } else {\n      let geocoder = new google.maps.Geocoder();\n      geocoder.geocode({ 'address': address }, (results, status) => {\n        if (status == google.maps.GeocoderStatus.OK) {\n          this.zone.run(() => {\n            this.lat = results[0].geometry.location.lat();\n            this.lng = results[0].geometry.location.lng();\n          })\n        } else {\n          alert('Error - ' + results + ' & Status - ' + status)\n        }\n      });\n    }\n  }\n\n  // back(){\n  //   this.sendData.alldata={'requestPage':this.profileAddCustomer.requestPage}\n  //   this.route.navigate(['./profile-upload']);\n  // }\n  next(){\n      this.zone.run(()=>{\n        let apiKey={\n          \"latitude\":this.lat ,\n          \"longitude\":this.lng,\n          \"location_dump\":this.userLocation,\n          \"request_for\":this.requestID,\n          \"request_page\":this.requestIDPage,\n        }\n        this.apiService.apiCallWithLoginToken(URLS.geoLocationUrl,apiKey).subscribe((result) =>{\n          if(result.success==1){\n            this.route.navigate(['/tabs']);    \n          }else{\n            this.apiService.showToastMessage(result.message, 'top', 3000, 'redBg');\n          }\n        },err =>{\n          this.apiService.showToastMessage(JSON.stringify(err), 'top', 3000, 'redBg');\n        });\n      }); \n      // this.route.navigate(['./registration']);\n    }\n  }\n\n","export default \".col {\\n  text-align: end;\\n}\\n\\n.para {\\n  margin-bottom: 0px;\\n  font-size: 24px;\\n}\\n\\n.geoBox {\\n  border: 1px solid var(--headerColor);\\n}\\n\\n.geoIcon {\\n  font-size: 20px;\\n}\\n\\n.detect, .geoIcon, .para {\\n  color: var(--headerColor);\\n}\\n\\n.dev {\\n  font-size: 19px;\\n}\\n\\n.banner_bg {\\n  left: 0;\\n  width: 100%;\\n  display: block;\\n  border-radius: 10px;\\n}\\n\\n.blank {\\n  width: 100%;\\n  height: 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlb2xvY2F0aW9uLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLGVBQUE7QUFBSjs7QUFFQTtFQUFNLGtCQUFBO0VBQW1CLGVBQUE7QUFHekI7O0FBRkM7RUFBUSxvQ0FBQTtBQU1UOztBQUxDO0VBQVUsZUFBQTtBQVNYOztBQVJDO0VBQXdCLHlCQUFBO0FBWXpCOztBQVhDO0VBQU0sZUFBQTtBQWVQOztBQWRDO0VBSUcsT0FBQTtFQUNBLFdBQUE7RUFDQSxjQUFBO0VBQ0EsbUJBQUE7QUFjSjs7QUFaQTtFQUNHLFdBQUE7RUFDQSxhQUFBO0FBZUgiLCJmaWxlIjoiZ2VvbG9jYXRpb24ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uY29se1xuICAgIHRleHQtYWxpZ246IGVuZDtcbn1cbi5wYXJhe21hcmdpbi1ib3R0b206IDBweDtmb250LXNpemU6IDI0cHg7fVxuIC5nZW9Cb3h7Ym9yZGVyOiAxcHggc29saWQgdmFyKC0taGVhZGVyQ29sb3IpOyB9XG4gLmdlb0ljb257IGZvbnQtc2l6ZTogMjBweDt9XG4gLmRldGVjdCwuZ2VvSWNvbiwucGFyYXsgY29sb3I6IHZhcigtLWhlYWRlckNvbG9yKTt9XG4gLmRldnsgZm9udC1zaXplOiAxOXB4O31cbiAuYmFubmVyX2JnIHtcbiAgIC8vIHRvcDogMDtcbiAgIFxuICAgLy8gbWFyZ2luLXRvcDogLTY2cHg7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuLmJsYW5re1xuICAgd2lkdGg6MTAwJTtcbiAgIGhlaWdodDogMTAwcHg7XG59Il19 */\";","export default \"\\n<ion-content [ngClass]=\\\"{'content-bg':  platform.width()<740}\\\">\\n  <ion-row class=\\\"ion-justify-content-center\\\">\\n    <ion-col size-xl=\\\"6\\\" size-md=\\\"8\\\" size-xs=\\\"12\\\" [ngClass]=\\\"{'boundary1':  platform.width()>740}\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col >\\n          <img src = \\\"assets/icon/logo.svg\\\" style = \\\"width: 150px;\\\">\\n        </ion-col>\\n        <ion-col class=\\\"col\\\">\\n          <img src = \\\"assets/icon/abc.png\\\" style = \\\"width: 130px;  text-align: right;\\\">\\n        </ion-col>\\n      </ion-row>\\n     \\n    </ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <p class=\\\"para\\\"><b>Geo Location</b></p>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <p class=\\\"dev\\\">Enable your device location </p>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row tappable (click)=\\\"getLocationFun()\\\">\\n      <ion-col>\\n        <ion-row class =\\\"geoBox\\\" >\\n          <ion-col size=\\\"1\\\" class=\\\"autoMargin\\\"><ion-icon class =\\\"geoIcon\\\" name=\\\"locate-outline\\\"></ion-icon></ion-col>\\n          <ion-col size=\\\"11\\\" class=\\\"autoMargin\\\"><p class =\\\"detect ion-no-margin\\\">Detect my location</p></ion-col>\\n        </ion-row>\\n      \\n\\n      </ion-col>\\n    </ion-row>\\n    <div *ngIf = \\\"loc\\\">\\n      <ion-row>\\n        <ion-col> <p>Your Location</p></ion-col>\\n      </ion-row>  \\n      <ion-row>\\n        <ion-col size =\\\"1\\\"><ion-icon name=\\\"location-outline\\\"></ion-icon></ion-col>\\n        <ion-col size=\\\"11\\\">{{loc}}</ion-col>\\n      </ion-row>\\n    </div>\\n\\n    <br>\\n    <br>\\n  <br>\\n   \\n    <div [ngClass]=\\\"{'banner': platform.width()<740}\\\">\\n      <ion-row>\\n       <!-- <ion-col class=\\\"ion-text-right\\\">\\n        <ion-button class=\\\"ionic_btn butt\\\" (click) = \\\"back()\\\">Back</ion-button>\\n        </ion-col> -->\\n       <ion-col class=\\\"ion-text-center\\\">\\n       <ion-button [disabled]=\\\"!loc\\\" class=\\\"ionic_btn\\\" tappable (click) = \\\"next()\\\">Next</ion-button>\\n        </ion-col>\\n        </ion-row>\\n        <img src = \\\"assets/icon/Design 1.png\\\" class=\\\"banner_bg\\\">\\n        </div>\\n       \\n    </ion-col>\\n    </ion-row>\\n</ion-content>\\n\";"]}