{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { HttpEventType } from '@angular/common/http';\nimport { APP_CONFIG, URLS } from 'src/assets/constant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"src/app/provider/api.service\";\nimport * as i3 from \"@ionic-native/file-transfer/ngx\";\nimport * as i4 from \"@ionic-native/file/ngx\";\nimport * as i5 from \"@ionic-native/camera/ngx\";\nimport * as i6 from \"@angular/platform-browser\";\nimport * as i7 from \"src/app/services/local-storage.service\";\nimport * as i8 from \"@angular/common\";\n\nfunction ModelCameraPage_ion_row_7_input_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 16);\n    i0.ɵɵlistener(\"change\", function ModelCameraPage_ion_row_7_input_6_Template_input_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return ctx_r4.captureImg($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ModelCameraPage_ion_row_7_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵlistener(\"click\", function ModelCameraPage_ion_row_7_div_7_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.pickImage();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ModelCameraPage_ion_row_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-row\");\n    i0.ɵɵelementStart(1, \"ion-col\");\n    i0.ɵɵelementStart(2, \"label\", 8);\n    i0.ɵɵelement(3, \"ion-icon\", 9);\n    i0.ɵɵelementStart(4, \"p\", 10);\n    i0.ɵɵtext(5, \"Take a Snapshot\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, ModelCameraPage_ion_row_7_input_6_Template, 1, 0, \"input\", 11);\n    i0.ɵɵtemplate(7, ModelCameraPage_ion_row_7_div_7_Template, 1, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"ion-col\", 13);\n    i0.ɵɵelementStart(9, \"h1\");\n    i0.ɵɵtext(10, \"|\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"ion-col\");\n    i0.ɵɵelementStart(12, \"label\", 8);\n    i0.ɵɵelement(13, \"ion-icon\", 14);\n    i0.ɵɵelementStart(14, \"p\", 10);\n    i0.ɵɵtext(15, \"Select Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 15);\n    i0.ɵɵlistener(\"change\", function ModelCameraPage_ion_row_7_Template_input_change_16_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.captureImg($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r0.platform == null ? null : ctx_r0.platform.is(\"cordova\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.platform == null ? null : ctx_r0.platform.is(\"cordova\"));\n  }\n}\n\nfunction ModelCameraPage_ion_row_8_ion_col_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-col\", 19);\n    i0.ɵɵelementStart(1, \"ion-button\", 20);\n    i0.ɵɵlistener(\"click\", function ModelCameraPage_ion_row_8_ion_col_1_Template_ion_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const item_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.pgShoW(item_r11);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"size\", 6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r11 == null ? null : item_r11.button_text);\n  }\n}\n\nfunction ModelCameraPage_ion_row_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-row\");\n    i0.ɵɵtemplate(1, ModelCameraPage_ion_row_8_ion_col_1_Template, 3, 2, \"ion-col\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.pgShow);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"banner\": a0\n  };\n};\n\nexport let ModelCameraPage = /*#__PURE__*/(() => {\n  class ModelCameraPage {\n    constructor(modalController, apiServices, navParam, transfer, platform, file, camera, sanitizer, localStorage) {\n      this.modalController = modalController;\n      this.apiServices = apiServices;\n      this.navParam = navParam;\n      this.transfer = transfer;\n      this.platform = platform;\n      this.file = file;\n      this.camera = camera;\n      this.sanitizer = sanitizer;\n      this.localStorage = localStorage;\n      this.files = [];\n      this.win = window;\n      this.RegistrationData = this.navParam.data.data;\n      console.log(\" this.RegistrationData\", this.RegistrationData);\n      console.log(\" this.RegistrationData\", this.navParam.data.data);\n\n      if (this.RegistrationData != undefined || this.RegistrationData != '') {\n        if (this.RegistrationData.nulldata) {\n          this.flag = this.RegistrationData.flag;\n        } else if (this.RegistrationData.show_popup) {\n          this.pgShow = this.RegistrationData.show_popup;\n        } else {\n          this.flag = \"5\";\n        }\n\n        console.log(\"1\");\n        console.log(\" this.RegistrationData\", this.navParam.data.data);\n        this.RequestFor = this.RegistrationData.requestFor;\n        this.RequestPage = this.RegistrationData.requestPage;\n      } else {\n        console.log(\"2\");\n        this.RequestFor = '';\n        this.RequestPage = '';\n      }\n\n      console.log('this registrationData from profile upload page', this.RegistrationData);\n    }\n\n    ngOnInit() {}\n\n    close() {\n      this.modalController.dismiss({\n        'dismissed': true\n      });\n    }\n\n    pickImage() {\n      return __awaiter(this, void 0, void 0, function* () {\n        console.log('cordova calling');\n        const options = {\n          quality: 40,\n          cameraDirection: 1,\n          correctOrientation: true,\n          destinationType: this.camera.DestinationType.FILE_URI,\n          sourceType: this.camera.PictureSourceType.CAMERA,\n          encodingType: this.camera.EncodingType.JPEG,\n          mediaType: this.camera.MediaType.PICTURE\n        }; // Get the data of an image\n\n        this.camera.getPicture(options).then(imagePath => {\n          console.log(\"imagePath==\", imagePath);\n          this.currentName = imagePath;\n          let name = this.currentName.split(\"/\"); // code for fetching file name\n\n          this.fileName = name[name.length - 1]; // this.previewImagePath=this.win.Ionic.WebView.convertFileSrc(imagePath);\n\n          if (this.platform.is(\"ios\")) {\n            let tempImg = this.sanitizer.bypassSecurityTrustResourceUrl(this.win.Ionic.WebView.convertFileSrc(imagePath));\n            console.log(\"ios imagePath==\", tempImg); // this.previewImagePath=tempImg;\n            // console.log(\"ios previewImagePath==\", this.previewImagePath);\n          } else {// this.previewImagePath=this.win.Ionic.WebView.convertFileSrc(imagePath);\n          }\n\n          this.uploadImageonserver();\n        }, err => {\n          console.log(\"imagePath error==\", err);\n        });\n      });\n    }\n\n    uploadImageonserver() {\n      this.apiServices.presentLoadingDefault();\n      this.localStorage.getStorage().then(dataFromStorage => {\n        var url = URLS.baseUrl + URLS.imageUploadUrl;\n        console.log(\"url\", url);\n        let myheaders = new Headers();\n        myheaders.append('Content-Type', 'application/json');\n        var targetPath = this.currentName; // aply only for imagepicker checking\n\n        let options = {\n          fileKey: \"file\",\n          fileName: this.fileName,\n          chunkedMode: false,\n          mimeType: \"multipart/form-data\",\n          params: {\n            'file': targetPath,\n            \"client_id\": APP_CONFIG.clientId,\n            \"device\": this.apiServices.device,\n            \"device_id\": dataFromStorage.deviceId,\n            \"app_version\": APP_CONFIG.app_version,\n            \"employee_id\": dataFromStorage.allStoreData.user_id,\n            \"request_page\": this.RequestPage,\n            \"user_type\": dataFromStorage.allStoreData.employee_type,\n            \"media_type\": '1',\n            \"flag_type\": this.flag,\n            \"request_for\": this.RequestFor\n          }\n        };\n        console.log(\"options\", options);\n        console.log(\"passing key==\", JSON.stringify(options));\n        const fileTransfer = this.transfer.create();\n        fileTransfer.upload(targetPath, url, options).then(res => {\n          console.log(\"server res==\", res);\n          let data = JSON.parse(res.response);\n          console.log(\"response==\", res);\n          console.log(\"response22==\", data);\n          this.apiServices.presentLoadingClose();\n\n          if (data.success == 1) {\n            this.modalController.dismiss({\n              'dismissed': true,\n              'data': data.data\n            });\n            this.apiServices.showToastMessage(data.message, 'top', 3000, 'greenBg');\n          } else {\n            console.log(\"message key==\", data.message); // this.apiServices.showToastMessage(data.message, 'top', 3000, 'redBg');\n            // this.apiServices.hideLoader();\n          }\n        }, err => {\n          this.apiServices.presentLoadingClose();\n          console.log(\"err==\", err);\n          this.apiServices.showToastMessage(JSON.stringify(err), 'top', 3000, 'redBg');\n        }); // })\n      });\n    }\n\n    captureImg(event) {\n      this.apiServices.presentLoadingDefault();\n      console.log('event1==>', event);\n      var formData = new FormData();\n\n      if (event.target.files) {\n        const file = event.target.files[0];\n        formData.append('file', file);\n        formData.append('flag_type', this.flag);\n        formData.append('media_type', \"1\");\n        formData.append('request_for', this.RequestFor);\n        formData.append('request_page', this.RequestPage);\n        console.log('formData==>', formData);\n        this.apiServices.mediaFileUpload(URLS.imageUploadUrl, formData).subscribe(event => {\n          console.log('Multi File upload res==> ', JSON.stringify(event));\n\n          switch (event.type) {\n            case HttpEventType.Sent:\n              console.log('Request has been made!');\n              break;\n\n            case HttpEventType.ResponseHeader:\n              console.log('Response header has been received!');\n              break;\n\n            case HttpEventType.Response:\n              let result = event.body;\n              const reader = new FileReader();\n              reader.readAsDataURL(file);\n\n              reader.onload = () => {\n                console.log(reader.result);\n                formData.append(\"file\", this.files);\n                console.log('this.currentObj==>', this.currentObj); // this.currentObj.answer= reader.result;\n\n                this.apiServices.presentLoadingClose();\n                this.modalController.dismiss({\n                  'dismissed': true,\n                  'data': result.data\n                });\n              };\n\n          }\n        }, err => {\n          this.apiServices.presentLoadingClose();\n          this.apiServices.showToastMessage(JSON.stringify(err), 'top', 3000, 'redBg'); // this.dismissLoading();\n        });\n      }\n    }\n\n    pgShoW(id) {\n      this.modalController.dismiss({\n        'dismissed': true,\n        'data': id //'data':result.data\n\n      }); // this.route.navigate(['/mobile']);\n    }\n\n  }\n\n  ModelCameraPage.ɵfac = function ModelCameraPage_Factory(t) {\n    return new (t || ModelCameraPage)(i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i1.NavParams), i0.ɵɵdirectiveInject(i3.FileTransfer), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i4.File), i0.ɵɵdirectiveInject(i5.Camera), i0.ɵɵdirectiveInject(i6.DomSanitizer), i0.ɵɵdirectiveInject(i7.LocalStorageService));\n  };\n\n  ModelCameraPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModelCameraPage,\n    selectors: [[\"app-model-camera\"]],\n    decls: 11,\n    vars: 5,\n    consts: [[1, \"content-bg\"], [1, \"ion-justify-content-center\"], [1, \"back\"], [1, \"circle\"], [\"name\", \"close\", 1, \"circle_close\", 3, \"click\"], [4, \"ngIf\"], [3, \"ngClass\"], [\"src\", \"assets/icon/Design 1.png\", 1, \"banner_bg\"], [1, \"image-upload\"], [\"name\", \"camera-outline\", 1, \"FooterCam\", \"iconBorder\"], [1, \"activityClass\"], [\"type\", \"file\", \"multiple\", \"\", \"accept\", \"image/*\", \"capture\", \"\", 3, \"change\", 4, \"ngIf\"], [\"class\", \"overDiv\", \"tappable\", \"\", 3, \"click\", 4, \"ngIf\"], [\"size\", \"2\"], [\"name\", \"images-outline\", 1, \"FooterCam\", \"iconBorder\"], [\"type\", \"file\", \"accept\", \"image/*\", 3, \"change\"], [\"type\", \"file\", \"multiple\", \"\", \"accept\", \"image/*\", \"capture\", \"\", 3, \"change\"], [\"tappable\", \"\", 1, \"overDiv\", 3, \"click\"], [3, \"size\", 4, \"ngFor\", \"ngForOf\"], [3, \"size\"], [1, \"pgSo\", 3, \"click\"]],\n    template: function ModelCameraPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-content\", 0);\n        i0.ɵɵelementStart(1, \"ion-row\", 1);\n        i0.ɵɵelementStart(2, \"ion-col\", 2);\n        i0.ɵɵelementStart(3, \"ion-grid\");\n        i0.ɵɵelementStart(4, \"ion-row\");\n        i0.ɵɵelementStart(5, \"ion-col\", 3);\n        i0.ɵɵelementStart(6, \"ion-icon\", 4);\n        i0.ɵɵlistener(\"click\", function ModelCameraPage_Template_ion_icon_click_6_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, ModelCameraPage_ion_row_7_Template, 17, 2, \"ion-row\", 5);\n        i0.ɵɵtemplate(8, ModelCameraPage_ion_row_8_Template, 2, 1, \"ion-row\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 6);\n        i0.ɵɵelement(10, \"img\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", !ctx.pgShow);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.pgShow);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, ctx.platform.width() < 740));\n      }\n    },\n    directives: [i1.IonContent, i1.IonRow, i1.IonCol, i1.IonGrid, i1.IonIcon, i8.NgIf, i8.NgClass, i8.NgForOf, i1.IonButton],\n    styles: [\".image-upload[_ngcontent-%COMP%] > input[_ngcontent-%COMP%]{display:none}.iconBorder[_ngcontent-%COMP%]{font-size:80px;color:#b01d22}ion-col[_ngcontent-%COMP%]{text-align:center}.circle[_ngcontent-%COMP%]{text-align:right;padding:0}.circle_close[_ngcontent-%COMP%]{font-size:30px;color:#b01d22}.back[_ngcontent-%COMP%], ion-grid[_ngcontent-%COMP%]{padding:0}h1[_ngcontent-%COMP%]{font-size:40px}.pgSo[_ngcontent-%COMP%]{width:100%;text-transform:capitalize;--border-radius:10px;--background:#b01d22}.overDiv[_ngcontent-%COMP%]{position:absolute;z-index:9;left:0;top:0;bottom:0;right:0}\"]\n  });\n  return ModelCameraPage;\n})();","map":null,"metadata":{},"sourceType":"module"}