{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { URLS } from 'src/assets/constant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/provider/api.service\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"src/app/services/data-transfer.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\n\nfunction AllocatePointFormPage_ion_item_13_ion_select_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const budMonthOpt_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", budMonthOpt_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(budMonthOpt_r5 == null ? null : budMonthOpt_r5.budget_month);\n  }\n}\n\nfunction AllocatePointFormPage_ion_item_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-item\");\n    i0.ɵɵelementStart(1, \"ion-label\", 6);\n    i0.ɵɵtext(2, \"Month\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-select\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function AllocatePointFormPage_ion_item_13_Template_ion_select_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.budMonthOpt = $event;\n    })(\"ionChange\", function AllocatePointFormPage_ion_item_13_Template_ion_select_ionChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.checkBudgetValue($event, ctx_r8.budMonthOpt);\n    });\n    i0.ɵɵtemplate(4, AllocatePointFormPage_ion_item_13_ion_select_option_4_Template, 2, 2, \"ion-select-option\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.budMonthOpt);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.budgetMonth);\n  }\n}\n\nfunction AllocatePointFormPage_ion_item_14_ion_select_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const brandOption_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", brandOption_r10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", brandOption_r10 == null ? null : brandOption_r10.brand_name, \" \");\n  }\n}\n\nfunction AllocatePointFormPage_ion_item_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-item\");\n    i0.ɵɵelementStart(1, \"ion-label\", 6);\n    i0.ɵɵtext(2, \"Brands\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-select\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function AllocatePointFormPage_ion_item_14_Template_ion_select_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.brandOption = $event;\n    })(\"ionChange\", function AllocatePointFormPage_ion_item_14_Template_ion_select_ionChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.checkBrandValue($event, ctx_r13.brandOption);\n    });\n    i0.ɵɵtemplate(4, AllocatePointFormPage_ion_item_14_ion_select_option_4_Template, 2, 2, \"ion-select-option\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.brandOption);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.brandList);\n  }\n}\n\nfunction AllocatePointFormPage_ion_item_15_ion_select_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const productOption_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", productOption_r15);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", productOption_r15 == null ? null : productOption_r15.product_name, \" \");\n  }\n}\n\nfunction AllocatePointFormPage_ion_item_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-item\");\n    i0.ɵɵelementStart(1, \"ion-label\", 6);\n    i0.ɵɵtext(2, \"Product\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-select\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function AllocatePointFormPage_ion_item_15_Template_ion_select_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.productOption = $event;\n    })(\"ionChange\", function AllocatePointFormPage_ion_item_15_Template_ion_select_ionChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.checkProdValue($event, ctx_r18.productOption);\n    });\n    i0.ɵɵtemplate(4, AllocatePointFormPage_ion_item_15_ion_select_option_4_Template, 2, 2, \"ion-select-option\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.productOption);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.productList);\n  }\n}\n\nfunction AllocatePointFormPage_ion_item_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-item\");\n    i0.ɵɵelementStart(1, \"ion-label\", 6);\n    i0.ɵɵtext(2, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-datetime\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function AllocatePointFormPage_ion_item_16_Template_ion_datetime_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.myDate = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"ion-icon\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"min\", ctx_r3.minDate);\n    i0.ɵɵpropertyInterpolate(\"max\", ctx_r3.maxDate);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.myDate);\n  }\n}\n\nexport let AllocatePointFormPage = /*#__PURE__*/(() => {\n  class AllocatePointFormPage {\n    constructor(apiService, zone, loadingController, navCtrl, sendData, route, modalCtrl) {\n      this.apiService = apiService;\n      this.zone = zone;\n      this.loadingController = loadingController;\n      this.navCtrl = navCtrl;\n      this.sendData = sendData;\n      this.route = route;\n      this.modalCtrl = modalCtrl;\n      this.bagsCount = \"\";\n      this.pointAllocatedRes = 0;\n      this.btnText = \"Submit\";\n      this.btnDisable = false;\n      this.maxBagLimit = 0;\n      this.Invoice = '';\n      this.dealerHomeData = this.sendData.alldata;\n      this.maxBagLimit = parseInt(this.sendData.alldata.max_bag_limit);\n      console.log('previousePageData==> ', this.dealerHomeData);\n      console.log(\"bag Count==\", this.bagsCount);\n    }\n\n    ngOnInit() {\n      this.fetchmonthData();\n    }\n\n    checkBagCount(ev) {\n      console.log('bageCount', ev);\n\n      if (parseInt(ev.detail.value) > this.dealerHomeData.max_bag_limit) {\n        this.apiService.showToastMessage('Maximum' + ' ' + this.dealerHomeData.max_bag_limit + ' ' + 'bags allowed', 'top', 2000, 'redBg');\n      }\n    }\n\n    gotoHomeTab() {\n      this.apiService.isSelected = 'true';\n      console.log(\"this.apiService.isSelected000000\", this.apiService.isSelected); // alert(this.apiService.isSelected)\n    }\n\n    fetchmonthData() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.loading = yield this.loadingController.create({\n          cssClass: 'my-custom-class',\n          message: 'Please wait...'\n        });\n        yield this.loading.present();\n        let apiKey = {\n          \"search_str\": \"\",\n          \"request_type\": \"brandAllocateMonth\",\n          \"request_user_type\": this.dealerHomeData.employee_type\n        };\n        this.apiService.apiCallWithLoginToken(URLS.searchApiUrl, apiKey).subscribe(result => {\n          console.log('allocatedMonthData', result);\n          this.loading.dismiss();\n\n          if (result.success == 1) {\n            this.budgetMonth = result.data;\n          } else {\n            this.apiService.showToastMessage(JSON.stringify(result.message), 'top', 3000, 'redBg');\n            this.navCtrl.pop();\n          }\n        }, err => {\n          this.loading.dismiss();\n          this.apiService.showToastMessage(JSON.stringify(err), 'top', 3000, 'redBg');\n        });\n      });\n    }\n\n    fetchData(productName, count) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.zone.run(() => __awaiter(this, void 0, void 0, function* () {\n          let proName = yield productName;\n          let apiKey = {\n            \"search_str\": \"\",\n            \"request_type\": proName,\n            \"request_user_type\": this.dealerHomeData.employee_type,\n            'dealer_budget_id': this.budgetId\n          };\n          this.apiService.apiCallWithLoginToken(URLS.searchApiUrl, apiKey).subscribe(result => {\n            if (count == this.dataList.length - 1) {\n              this.loading.dismiss();\n            }\n\n            if (result.success == 1) {\n              if (productName == 'product') {\n                this.productList = result.data;\n                console.log('productlist==>', this.productList);\n              } else if (productName == 'brand') {\n                this.brandList = result.data;\n                console.log('brandList==>', this.brandList);\n              }\n            } else {\n              this.apiService.showToastMessage(result.message, 'top', 3000, 'redBg');\n            }\n          }, err => {\n            this.apiService.showToastMessage(JSON.stringify(err), 'top', 3000, 'redBg');\n\n            if (count == this.dataList.length - 1) {\n              this.loading.dismiss();\n            }\n          });\n        }));\n      });\n    }\n\n    checkBrandValue(ev, data) {\n      console.log('ev', ev);\n      console.log('brand data ', data);\n      this.brandId = data.auto_id;\n    }\n\n    checkProdValue(ev, data) {\n      console.log('ev', ev);\n      console.log('prouct data ', data);\n      this.prodId = data.auto_id;\n      this.pointAllocatedRes = data.points_allocated;\n    }\n\n    checkBudgetValue(ev, data) {\n      return __awaiter(this, void 0, void 0, function* () {\n        console.log('ev', ev);\n        console.log('prouct data ', data);\n        this.minDate = data.min_date;\n        this.maxDate = data.max_date;\n        this.budgetId = data.auto_id;\n        this.dataList = ['product', 'brand'];\n\n        for (let i = 0; i < this.dataList.length; i++) {\n          this.fetchData(this.dataList[i], i);\n\n          if (i == 0) {\n            this.loading = yield this.loadingController.create({\n              cssClass: 'my-custom-class',\n              message: 'Please wait...'\n            });\n            yield this.loading.present();\n          }\n        }\n      });\n    }\n\n    gotoSubmit() {\n      this.zone.run(() => __awaiter(this, void 0, void 0, function* () {\n        this.btnText = 'Please wait...';\n        this.btnDisable = true;\n        let apiKey = {\n          \"allocate_to\": this.dealerHomeData.customer_id,\n          \"brand_id\": this.brandId,\n          \"product_id\": this.prodId,\n          \"sell_date\": this.myDate,\n          \"bag_number\": this.bagsCount,\n          'budget_id': this.budgetId,\n          \"invoice_number\": this.Invoice\n        };\n        this.apiService.apiCallWithLoginToken(URLS.pointAllocateApiUrl, apiKey).subscribe(result => {\n          this.btnText = 'Submit';\n          this.btnDisable = false;\n\n          if (result.success == 1) {\n            // this.brandId=''\n            //  this.budMonthOpt='';\n            this.myDate = ''; // this.budgetMonth=''\n            //  this.budMonthOpt='';\n            // this.productList=[];\n            // this.fetchmonthData();\n            //  this.budgetMonth='';\n\n            this.apiService.showToastMessage(result.message, 'top', 3000, 'greenBg');\n            this.bagsCount = ''; //  this.route.navigate(['/tabs/customer-allocation']);\n            // window.history.go(-1);\n            // this.navCtrl.navigateBack('/customer-allocation');\n          } else {\n            this.apiService.showToastMessage(result.message, 'top', 3000, 'redBg');\n          }\n        }, err => {\n          this.apiService.showToastMessage(JSON.stringify(err), 'top', 3000, 'redBg');\n        });\n      }));\n    }\n\n  }\n\n  AllocatePointFormPage.ɵfac = function AllocatePointFormPage_Factory(t) {\n    return new (t || AllocatePointFormPage)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.LoadingController), i0.ɵɵdirectiveInject(i2.NavController), i0.ɵɵdirectiveInject(i3.DataTransferService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i2.ModalController));\n  };\n\n  AllocatePointFormPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AllocatePointFormPage,\n    selectors: [[\"app-allocate-point-form\"]],\n    decls: 32,\n    vars: 11,\n    consts: [[\"slot\", \"start\", \"tappable\", \"\", 3, \"click\"], [1, \"ion-padding\"], [\"size-sm\", \"12\", \"size-md\", \"8\", \"size-lg\", \"8\", \"push-lg\", \"2\", \"push-md\", \"2\", 1, \"whiteCol\", \"ion-padding\", 3, \"size\"], [\"lines\", \"none\", 1, \"redbgDiv\"], [1, \"fullNamediv\"], [4, \"ngIf\"], [\"position\", \"stacked\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"tel\", 3, \"ngModel\", \"ngModelChange\", \"ionChange\"], [1, \"ion-text-center\"], [\"tappable\", \"\", 1, \"ionic_btn\", \"BTmmm\", 3, \"disabled\", \"click\"], [\"okText\", \"Okay\", \"cancelText\", \"Dismiss\", \"interface\", \"popover\", 3, \"ngModel\", \"ngModelChange\", \"ionChange\"], [\"class\", \"w100\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"w100\", 3, \"value\"], [\"placeholder\", \"Select Allocation Date\", \"displayFormat\", \"MMM/DD/YYYY\", 3, \"min\", \"max\", \"ngModel\", \"ngModelChange\"], [\"name\", \"calendar\", \"slot\", \"end\"]],\n    template: function AllocatePointFormPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\");\n        i0.ɵɵelementStart(1, \"ion-toolbar\");\n        i0.ɵɵelementStart(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Allocate Bags\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-buttons\", 0);\n        i0.ɵɵlistener(\"click\", function AllocatePointFormPage_Template_ion_buttons_click_4_listener() {\n          return ctx.gotoHomeTab();\n        });\n        i0.ɵɵelement(5, \"ion-back-button\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ion-content\", 1);\n        i0.ɵɵelementStart(7, \"ion-row\");\n        i0.ɵɵelementStart(8, \"ion-col\", 2);\n        i0.ɵɵelementStart(9, \"ion-list\");\n        i0.ɵɵelementStart(10, \"ion-item\", 3);\n        i0.ɵɵelementStart(11, \"p\", 4);\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, AllocatePointFormPage_ion_item_13_Template, 5, 2, \"ion-item\", 5);\n        i0.ɵɵtemplate(14, AllocatePointFormPage_ion_item_14_Template, 5, 2, \"ion-item\", 5);\n        i0.ɵɵtemplate(15, AllocatePointFormPage_ion_item_15_Template, 5, 2, \"ion-item\", 5);\n        i0.ɵɵtemplate(16, AllocatePointFormPage_ion_item_16_Template, 5, 3, \"ion-item\", 5);\n        i0.ɵɵelementStart(17, \"ion-item\");\n        i0.ɵɵelementStart(18, \"ion-label\", 6);\n        i0.ɵɵtext(19, \"Invoice\\u00A0No.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"ion-input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function AllocatePointFormPage_Template_ion_input_ngModelChange_20_listener($event) {\n          return ctx.Invoice = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"ion-item\");\n        i0.ɵɵelementStart(22, \"ion-label\", 6);\n        i0.ɵɵtext(23, \"No. of Bags\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"ion-input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function AllocatePointFormPage_Template_ion_input_ngModelChange_24_listener($event) {\n          return ctx.bagsCount = $event;\n        })(\"ionChange\", function AllocatePointFormPage_Template_ion_input_ionChange_24_listener($event) {\n          return ctx.checkBagCount($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"br\");\n        i0.ɵɵelementStart(26, \"ion-row\");\n        i0.ɵɵelementStart(27, \"ion-col\", 9);\n        i0.ɵɵelementStart(28, \"ion-button\", 10);\n        i0.ɵɵlistener(\"click\", function AllocatePointFormPage_Template_ion_button_click_28_listener() {\n          return ctx.gotoSubmit();\n        });\n        i0.ɵɵtext(29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"br\");\n        i0.ɵɵelement(31, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"size\", 12);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate2(\"\", ctx.dealerHomeData == null ? null : ctx.dealerHomeData.full_name, \",\\u00A0\", ctx.dealerHomeData == null ? null : ctx.dealerHomeData.contact, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.budgetMonth && (ctx.budgetMonth == null ? null : ctx.budgetMonth.length) >= 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.brandList && (ctx.brandList == null ? null : ctx.brandList.length) >= 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.productList && (ctx.productList == null ? null : ctx.productList.length) >= 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.brandList && (ctx.brandList == null ? null : ctx.brandList.length) >= 1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.Invoice);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.bagsCount);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.brandOption || !ctx.productOption || ctx.bagsCount <= 0 || ctx.btnDisable == true || !ctx.myDate || ctx.maxBagLimit < ctx.bagsCount);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.btnText);\n      }\n    },\n    directives: [i2.IonHeader, i2.IonToolbar, i2.IonTitle, i2.IonButtons, i2.IonBackButton, i2.IonBackButtonDelegate, i2.IonContent, i2.IonRow, i2.IonCol, i2.IonList, i2.IonItem, i5.NgIf, i2.IonLabel, i2.IonInput, i2.TextValueAccessor, i6.NgControlStatus, i6.NgModel, i2.IonButton, i2.IonSelect, i2.SelectValueAccessor, i5.NgForOf, i2.IonSelectOption, i2.IonDatetime, i2.IonIcon],\n    styles: [\"ion-label[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{color:var(--headerColor)!important}p.totalPoint[_ngcontent-%COMP%]{font-size:12px;font-weight:700}.container[_ngcontent-%COMP%]{padding:1% 5%}.whiteBg[_ngcontent-%COMP%]{background-color:#fff;border:1px solid #cdcdcd;border-radius:10px;overflow:hidden;padding:10px;box-shadow:1px 1px 16px 1px #cdcdcd}.redbgDiv[_ngcontent-%COMP%]{--background:linear-gradient(195deg,#bb2929 57%,var(--headerColor) 33%)!important;border-radius:7px}.fullNamediv[_ngcontent-%COMP%]{color:#fff!important;font-weight:700;margin:6px 0}.BTmmm[_ngcontent-%COMP%]{width:60%!important}\"]\n  });\n  return AllocatePointFormPage;\n})();","map":null,"metadata":{},"sourceType":"module"}