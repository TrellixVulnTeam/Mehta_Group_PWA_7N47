{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/storage-angular\";\nexport let LocalStorageService = /*#__PURE__*/(() => {\n  class LocalStorageService {\n    constructor(storage) {\n      this.storage = storage;\n      this._storage = null;\n    }\n\n    setStorage(key, value) {\n      return __awaiter(this, void 0, void 0, function* () {\n        console.log('localStorage storedData storage data key==> ', key);\n        console.log('localStorage storedData storage data value==> ', value);\n        yield this.storage.get('allStoreData').then(storedData => __awaiter(this, void 0, void 0, function* () {\n          console.log('call Fcm storage service2==> ', storedData);\n\n          if (storedData) {\n            storedData[key] = value;\n            yield this.storage.set('allStoreData', storedData).then(res => {\n              console.log('storage data==> ', res);\n            });\n          } else {\n            console.log('******==> ', storedData);\n            console.log('****** key==> ', key);\n            console.log('****** value==> ', value);\n            let obj = {};\n            obj[key] = value;\n            yield this.storage.set('allStoreData', obj).then(res => {\n              console.log('storage data null obj==> ', res);\n            });\n          }\n        }));\n      });\n    } // to get a key/value pair\n\n\n    getStorage() {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          const result = yield this.storage.get('allStoreData');\n\n          if (result != null) {\n            return result;\n          }\n\n          return null;\n        } catch (reason) {\n          console.log(reason);\n          return null;\n        }\n      });\n    } // remove a single key value:\n\n\n    remove(key) {\n      this.storage.remove(key);\n    } //  delete all data from your application:\n\n\n    clear() {\n      this.storage.clear();\n    }\n\n    createDB() {\n      return __awaiter(this, void 0, void 0, function* () {\n        // If using a custom driver:\n        // await this.storage.defineDriver(MyCustomDriver)\n        // await this.storage.create();\n        const storage = yield this.storage.create();\n        this._storage = storage;\n      });\n    }\n\n  }\n\n  LocalStorageService.ɵfac = function LocalStorageService_Factory(t) {\n    return new (t || LocalStorageService)(i0.ɵɵinject(i1.Storage));\n  };\n\n  LocalStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LocalStorageService,\n    factory: LocalStorageService.ɵfac,\n    providedIn: 'root'\n  });\n  return LocalStorageService;\n})();","map":null,"metadata":{},"sourceType":"module"}