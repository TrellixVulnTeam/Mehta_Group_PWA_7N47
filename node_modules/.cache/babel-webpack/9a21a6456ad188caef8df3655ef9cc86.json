{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { RouterOutlet, ActivationStart } from '@angular/router';\nimport { IonRouterOutlet } from '@ionic/angular';\nimport { URLS } from 'src/assets/constant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"./services/local-storage.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./provider/api.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@ionic-native/device/ngx\";\nimport * as i7 from \"@ionic-native/splash-screen/ngx\";\nimport * as i8 from \"@ionic-native/status-bar/ngx\"; //import { Platform,  } from '@ionic/angular';\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(platform, localStorage, loc, zone, apiService, route, device_id, alertController, splashScreen, statusBar) {\n      this.platform = platform;\n      this.localStorage = localStorage;\n      this.loc = loc;\n      this.zone = zone;\n      this.apiService = apiService;\n      this.route = route;\n      this.device_id = device_id;\n      this.alertController = alertController;\n      this.splashScreen = splashScreen;\n      this.statusBar = statusBar;\n      this.isDesktop = false;\n      this.localStorage.createDB(); // this.generateDeviceId();\n\n      this.initializeApp();\n      document.querySelector('body').style.setProperty('--headerColor', '#B01D22');\n      document.querySelector('body').style.setProperty('--backgroundColor', ' #F2F4F5');\n      document.querySelector('body').style.setProperty('--reedeemColor', '  #FEBA12');\n    }\n\n    ionViewWillEnter() {//  this.initializeApp();\n    }\n\n    ngOnInit() {\n      this.isDesktop = this.platform.is('desktop');\n      this.route.events.subscribe(e => {\n        if (e instanceof ActivationStart && e.snapshot.outlet === \"administration\") this.outlet.deactivate();\n      }); // this.maintance();\n      // this.backButtonEvent();\n    }\n\n    initializeApp() {\n      this.platform.ready().then(() => {\n        // if (this.platform.is(\"cordova\")) {\n        this.statusBar.styleDefault();\n        this.splashScreen.hide();\n        this.generateDeviceId();\n        this.apiService.generateFCMToken(); // }\n        // setTimeout(() => {\n\n        this.maintance(); // }, 1000);\n      });\n    }\n\n    generateDeviceId() {\n      if (this.platform.is(\"cordova\")) {\n        console.log(\"call FCM /DeviceId 12\");\n        let deviceUuid = this.device_id.uuid;\n        this.deviceId = deviceUuid == null ? \"browser\" : deviceUuid;\n\n        if (this.deviceId == \"browser\") {\n          let deviceUuid = this.device_id.uuid;\n          this.deviceId = deviceUuid == null ? \"browser\" : deviceUuid;\n\n          if (this.deviceId == \"browser\") {\n            let deviceUuid = this.device_id.uuid;\n            this.deviceId = deviceUuid == null ? \"browser\" : deviceUuid;\n            this.localStorage.setStorage('deviceId', this.deviceId);\n          } else {\n            this.localStorage.setStorage('deviceId', this.deviceId);\n          }\n        } else {\n          this.localStorage.setStorage('deviceId', this.deviceId);\n        }\n      } else {\n        console.log(\"call FCM /DeviceId 123\");\n        this.localStorage.setStorage('deviceId', 'PWA');\n      }\n    }\n\n    showExitConfirm() {\n      this.alertController.create({\n        header: 'App termination',\n        message: 'Do you want to close the app?',\n        backdropDismiss: false,\n        buttons: [{\n          text: 'Stay',\n          role: 'cancel',\n          handler: () => {\n            console.log('Application exit prevented!');\n          }\n        }, {\n          text: 'Exit',\n          handler: () => {\n            navigator['app'].exitApp();\n          }\n        }]\n      }).then(alert => {\n        alert.present();\n      });\n    }\n\n    maintance() {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield this.localStorage.getStorage().then(storedData => {\n          console.log('localStorage storedData storedData000', storedData);\n        });\n        this.zone.run(() => {\n          let apiKey = {};\n          this.apiService.apiCallWithLoginToken(URLS.maintanceUrl, apiKey).subscribe(result => __awaiter(this, void 0, void 0, function* () {\n            if (result.success == 1 || result.success == '1') {\n              this.maintanceData = result;\n              yield this.localStorage.setStorage('maintainanceData', result);\n              yield this.localStorage.getStorage().then(storedData => {\n                console.log('localStorage storedData storedData', storedData);\n\n                if (storedData && storedData.allStoreData != undefined) {\n                  // this.route.navigate(['/tabs']);\n                  console.log('localStorage storedData', storedData); // window.location.assign('/tabs');\n\n                  this.route.navigateByUrl('tabs');\n                } else {\n                  console.log('localStorage storedData maintance', storedData);\n                  this.maintanceData = storedData.maintainanceData;\n                  this.route.navigate(['/login']);\n                }\n              });\n\n              if (result.data.is_down == 1 || result.data.is_down == '1') {//for maintance redirection page\n              }\n            } else {\n              this.apiService.showToastMessage(result.message, 'top', 3000, 'redBg');\n            }\n          }), err => {\n            this.apiService.showToastMessage(JSON.stringify(err), 'top', 3000, 'redBg');\n          });\n        });\n      });\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i2.LocalStorageService), i0.ɵɵdirectiveInject(i3.PlatformLocation), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i4.ApiService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i6.Device), i0.ɵɵdirectiveInject(i1.AlertController), i0.ɵɵdirectiveInject(i7.SplashScreen), i0.ɵɵdirectiveInject(i8.StatusBar));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(IonRouterOutlet, 5);\n        i0.ɵɵviewQuery(RouterOutlet, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.routerOutlets = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.outlet = _t);\n      }\n    },\n    decls: 2,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-app\");\n        i0.ɵɵelement(1, \"ion-router-outlet\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i1.IonApp, i1.IonRouterOutlet],\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}